#ifndef HTTPSTATUS_H
#define HTTPSTATUS_H

#include <map>

namespace cpphttp {
    typedef enum HTTP_STATUS {
        // Informational
        CONTINUE = 100,
        SWITCHING_PROTOCOLS = 101,
        PROCESSING,
        // Success
        OK = 200,
        CREATED,
        ACCEPTED,
        NON_AUTHORITATIVE_INFORMATION,
        NO_CONTENT,
        RESET_CONTENT,
        PARTIAL_CONTENT,
        MULTI_STATUS,
        ALREADY_REPORTED,
        IM_USED = 226,
        // Redirections
        MULTIPLE_CHOICES = 300,
        MOVED_PERMANENTLY,
        MOVED_TEMPORARILY,
        FOUND,
        SEE_OTHER,
        NOT_MODIFIED,
        USE_PROXY,
        RESERVED,
        TEMPORARY_REDIRECT,
        PERMANENT_REDIRECT,
        // Client error
        BAD_REQUEST = 400,
        UNAUTHORIZED,
        PAYMENT_REQUIRED,
        FORBIDDEN,
        NOT_FOUND,
        METHOD_NOT_ALLOWED,
        NOT_ACCEPTABLE,
        PROXY_AUTHENTICATION_REQUIRED,
        REQUEST_TIMEOUT,
        CONFLICT,
        GONE,
        LENGTH_REQUIRED,
        PRECONDITION_FAILED,
        PAYLOAD_TOO_LARGE,
        URI_TOO_LONG,
        UNSUPPORTED_MEDIA_TYPE,
        RANGE_NOT_SATISFIABLE,
        EXPECTATION_FAILED,
        IM_A_TEAPOT,
        AUTHENTICATION_TIMEOUT,
        MISDIRECTED_REQUEST = 421,
        UNPROCESSABLE_ENTITY,
        LOCKED,
        FAILED_DEPENDENCY,
        UPGRADE_REQUIRED = 426,
        PRECONDITION_REQUIRED,
        TOO_MANY_REQUESTS,
        REQUEST_HEADER_FIELDS_TOO_LARGE = 431,
        RETRY_WITH = 449,
        UNAVAILABLE_FOR_LEGAL_REASONS = 451,
        CLIENT_CLOSED_REQUEST = 499,
        // Server error
        INTERNAL_SERVER_ERROR = 500,
        NOT_IMPLEMENTED,
        BAD_GATEWAY,
        SERVICE_UNAVAILABLE,
        GATEWAY_TIMEOUT,
        HTTP_VERSION_NOT_SUPPORTED,
        VARIANT_ALSO_NEGOTIATES,
        INSUFFICIENT_STORAGE,
        LOOP_DETECTED,
        BANDWIDTH_LIMIT_EXCEEDED,
        NOT_EXTENDED,
        NETWORK_AUTHENTICATION_REQUIRED,
    } HTTP_STATUS;

    static const std::map <HTTP_STATUS, const char * > HTTP_STATUS_STR = {
            {CONTINUE, "Continue"},
            {SWITCHING_PROTOCOLS, "Switching Protocols"},
            {PROCESSING, "Processing"},
            {OK, "OK"},
            {CREATED, "Created"},
            {ACCEPTED, "Accepted"},
            {NON_AUTHORITATIVE_INFORMATION, "Non Authoritative Information"},
            {NO_CONTENT, "No Content"},
            {RESET_CONTENT, "Reset Content"},
            {PARTIAL_CONTENT, "Partial Content"},
            {MULTI_STATUS, "Multi Status"},
            {ALREADY_REPORTED, "Already Reported"},
            {IM_USED, "IM Used"},
            // Redirections
            {MULTIPLE_CHOICES, "Multiple Choices"},
            {MOVED_PERMANENTLY, "Moved Permanently"},
            {MOVED_TEMPORARILY, "Moved Temporarily"},
            {FOUND, "Found"},
            {SEE_OTHER, "See Other"},
            {NOT_MODIFIED, "Not Modified"},
            {USE_PROXY, "Use Proxy"},
            {RESERVED, "Reserved"},
            {TEMPORARY_REDIRECT, "Temporary Redirect"},
            {PERMANENT_REDIRECT, "Permanent Redirect"},
            // Client error
            {BAD_REQUEST, "Bad Request"},
            {UNAUTHORIZED, "Unauthorized"},
            {PAYMENT_REQUIRED, "Payment Required"},
            {FORBIDDEN, "Forbidden"},
            {NOT_FOUND, "Not Found"},
            {METHOD_NOT_ALLOWED, "Method Not Allowed"},
            {NOT_ACCEPTABLE, "Not Acceptable"},
            {PROXY_AUTHENTICATION_REQUIRED, "Proxy Authentication Required"},
            {REQUEST_TIMEOUT, "Request Timeout"},
            {CONFLICT, "Conflict"},
            {GONE, "Gone"},
            {LENGTH_REQUIRED, "Length Required"},
            {PRECONDITION_FAILED, "Precondition Failed"},
            {PAYLOAD_TOO_LARGE, "Payload Too Large"},
            {URI_TOO_LONG, "URI Too Long"},
            {UNSUPPORTED_MEDIA_TYPE, "Unsupported Media Type"},
            {RANGE_NOT_SATISFIABLE, "Range Not Satisfiable"},
            {EXPECTATION_FAILED, "Expectation Failed"},
            {IM_A_TEAPOT, "I'm a teapot"},
            {AUTHENTICATION_TIMEOUT, "Authentication Timeout"},
            {MISDIRECTED_REQUEST, "Misdirected Request"},
            {UNPROCESSABLE_ENTITY, "Unprocessable Entity"},
            {LOCKED, "Locked"},
            {FAILED_DEPENDENCY, "Failed Dependency"},
            {UPGRADE_REQUIRED, "Upgrade Required"},
            {PRECONDITION_REQUIRED, "Precondition Required"},
            {TOO_MANY_REQUESTS, "Too Many Requests"},
            {REQUEST_HEADER_FIELDS_TOO_LARGE, "Request Header Fields Too Large"},
            {RETRY_WITH, "Retry With"},
            {UNAVAILABLE_FOR_LEGAL_REASONS, "Unavailable For Legal Reasons"},
            {CLIENT_CLOSED_REQUEST, "Client Closed Request"},
            // Server error
            {INTERNAL_SERVER_ERROR, "Internal Server Error"},
            {NOT_IMPLEMENTED, "Not Implemented"},
            {BAD_GATEWAY, "Bad Gateway"},
            {SERVICE_UNAVAILABLE, "Service Unavailable"},
            {GATEWAY_TIMEOUT, "Gateway Timout"},
            {HTTP_VERSION_NOT_SUPPORTED, "HTTP Version Not Supported"},
            {VARIANT_ALSO_NEGOTIATES, "Variant Also Negotiates"},
            {INSUFFICIENT_STORAGE, "Insufficient Storage"},
            {LOOP_DETECTED, "Loop Detected"},
            {BANDWIDTH_LIMIT_EXCEEDED, "Bandwidth Limit Exceeded"},
            {NOT_EXTENDED, "Not Extended"},
            {NETWORK_AUTHENTICATION_REQUIRED, "Network Authentication Required"},
    };
}

#endif // HTTPSTATUS_H
